{"version":3,"sources":["components/AddTodo.jsx","store/actions/todoActions.js","components/TodoItem.jsx","components/TodoList.js","App.js","store/reducers/todoReducer.js","store/reducers/rootReducer.js","store/store.js","index.js"],"names":["AddTodo","props","useState","todoTitle","setTodoTitle","dispatch","useDispatch","todos","useSelector","state","className","value","onChange","e","target","type","placeholder","onClick","todo","task","id","Math","floor","length","random","title","completed","payload","alert","count","fetch","then","response","json","slice","TodoItem","handleDelete","handleChange","name","defaultChecked","newTask","checked","TodoList","updateTodo","deleteTodo","map","el","inx","App","initState","todoReducer","action","nT","filter","rootReducer","combineReducers","store","createStore","applyMiddleware","logger","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f79a7ef.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addTodo, fetchTodos } from \"../store/actions/todoActions\";\r\n\r\nconst AddTodo = (props) => {\r\n  const [todoTitle, setTodoTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector((state) => state.todos);\r\n\r\n  const getTodos = () => dispatch(fetchTodos(5));\r\n\r\n  const handleChange = (e) => setTodoTitle(e.target.value);\r\n\r\n  const handleSubmit = () => {\r\n    if (todoTitle === \"\") {\r\n      alert(\"Give a Title!\");\r\n      return;\r\n    }\r\n    let task = {\r\n      id: Math.floor(999 * todos.length * Math.random()),\r\n      title: todoTitle,\r\n      completed: false,\r\n    };\r\n    dispatch(addTodo(task));\r\n    setTodoTitle(\"\");\r\n  };\r\n  return (\r\n    <div className=\"add-todo-div\">\r\n      <input\r\n        value={todoTitle}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        className=\"add-todo-input\"\r\n        placeholder=\"Add a Todo...\"\r\n      />\r\n      <div className=\"button\" onClick={handleSubmit}>\r\n        Add\r\n      </div>\r\n      <div className=\"button\" onClick={getTodos}>\r\n        Get Todos\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","export const addTodo = (todo) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"ADD_TODO\", payload: todo });\r\n  };\r\n};\r\n\r\nexport const updateTodo = (task) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"UPDATE_TODO\", payload: task });\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"DELETE_TODO\", payload: id });\r\n  };\r\n};\r\n\r\nexport const fetchTodos = (count) => {\r\n  return (dispatch) => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/\")\r\n      .then((response) => response.json())\r\n      .then((json) =>\r\n        dispatch({ type: \"LOAD_TODOS\", payload: json.slice(0, count - 1) })\r\n      );\r\n  };\r\n};\r\n\r\nexport const clearTodos = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"CLEAR_TODOS\" });\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nconst TodoItem = ({ task, handleDelete, handleChange }) => {\r\n  const { id, title, completed } = task;\r\n  return (\r\n    <>\r\n      <div id={id} className=\"task-wrapper\">\r\n        <div className=\"task-title\">{title}</div>\r\n        <div className=\"task-actions\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"todo-cbx\"\r\n            name=\"todo-cbx\"\r\n            defaultChecked={completed}\r\n            onClick={(e) => {\r\n              let newTask = { ...task, completed: e.target.checked };\r\n              handleChange(newTask);\r\n            }}\r\n          />\r\n          <div className=\"button\" onClick={() => handleDelete(id)}>\r\n            Delete\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"seperator\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  deleteTodo,\r\n  updateTodo,\r\n  clearTodos,\r\n} from \"../store/actions/todoActions\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = () => {\r\n  const todos = useSelector((state) => state.todos);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (task) => dispatch(updateTodo(task));\r\n  const handleDelete = (id) => dispatch(deleteTodo(id));\r\n  const handleClear = () => dispatch(clearTodos());\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {todos.map((el, inx) => (\r\n        <TodoItem\r\n          task={el}\r\n          handleChange={handleChange}\r\n          handleDelete={handleDelete}\r\n          key={inx}\r\n        />\r\n      ))}\r\n      {todos.length ? (\r\n        <div onClick={handleClear} className=\"button\">\r\n          Clear\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Da ToDo List!</h2>\n      </header>\n      <div className=\"content\">\n        <AddTodo />\n        <TodoList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const initState = [{ id: 0, title: \"Task 1\", completed: true }];\r\n\r\nconst todoReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return [...state, action.payload];\r\n\r\n    case \"UPDATE_TODO\":\r\n      let nT = state.filter((el) => el.id !== action.payload.id);\r\n      return [...nT, action.payload];\r\n\r\n    case \"DELETE_TODO\":\r\n      return state.filter((el) => el.id !== action.payload);\r\n\r\n    case \"LOAD_TODOS\":\r\n      return action.payload;\r\n\r\n    case \"CLEAR_TODOS\":\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  todos: todoReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}