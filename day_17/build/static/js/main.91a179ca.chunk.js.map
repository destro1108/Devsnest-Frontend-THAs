{"version":3,"sources":["components/CalorieItem.js","components/CalorieContainer.js","App.js","reportWebVitals.js","index.js"],"names":["CalorieItem","fooditem","console","log","className","title","subtitle","CalorieContainer","props","caloriedivs","id","map","el","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKAmBeA,EAfK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAElB,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAU,qBAAf,UACI,qBAAKA,UAAU,aAAf,SACKH,EAASI,QAEd,qBAAKD,UAAU,gBAAf,SACKH,EAASK,eCaXC,EArBU,SAACC,GAEtB,IAOMC,EAPW,CAAC,CAACC,GAAG,EAAEL,MAAM,QAAQC,SAAS,mCAC/B,CAACI,GAAG,EAAEL,MAAM,SAASC,SAAS,mCAC9B,CAACI,GAAG,EAAEL,MAAM,OAAOC,SAAS,oCAC5B,CAACI,GAAG,EAAEL,MAAM,SAAUC,SAAS,oCAC/B,CAACI,GAAG,EAAEL,MAAM,aAAcC,SAAS,mCACnC,CAACI,GAAG,EAAEL,MAAM,WAAYC,SAAS,oCACjC,CAACI,GAAG,EAAEL,MAAM,YAAaC,SAAS,oCACrBK,KAAI,SAACC,GAC9B,OACI,cAAC,EAAD,CAAyBX,SAAQ,eAAMW,IAArBA,EAAGF,OAG7B,OACI,qBAAKN,UAAU,oBAAf,SACKK,KCHEI,EAbH,WACV,OACE,sBAAKT,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,2DAEF,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,UCCOU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.91a179ca.chunk.js","sourcesContent":["\n\nimport React from 'react'\n\nconst CalorieItem = ({fooditem}) => {\n    console.log(fooditem);\n    return (\n        <div className=\"fooditem-container\">\n            <div className=\"item-title\">\n                {fooditem.title}\n            </div>\n            <div className=\"item-subtitle\">\n                {fooditem.subtitle}\n                {/* Tasty, not so healthy :( */}\n            </div>\n        </div>\n    )\n}\n\nexport default CalorieItem;\n","\nimport React from 'react'\nimport CalorieItem from './CalorieItem'\n\nconst CalorieContainer = (props) => {\n    \n    const calories = [{id:1,title:'Pizza',subtitle:'You have consumed 56 cals today'},\n                    {id:2,title:'Burger',subtitle:'You have consumed 69 cals today'},\n                    {id:3,title:'Coke',subtitle:'You have consumed 500 cals today'},\n                    {id:4,title:'Browne', subtitle:'You have consumed 180 cals today'},\n                    {id:5,title:'Fried Rice', subtitle:'You have consumed 90 cals today'},\n                    {id:6,title:'Lassania', subtitle:'You have consumed 200 cals today'},                     \n                    {id:7,title:'Pani Puri', subtitle:'You have consumed 10 cals today'}];\n    const caloriedivs = calories.map((el) => {\n        return(\n            <CalorieItem key={el.id} fooditem={{...el}} />\n        )\n    });\n    return (\n        <div className='calorie-container'>\n            {caloriedivs}\n        </div>\n    )\n}\n\nexport default CalorieContainer;\n","import CalorieContainer from \"./components/CalorieContainer\";\n\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Eat good, Stay Healthy!</h2>\n      </header>\n      <div className=\"content\">\n        <CalorieContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}