{"version":3,"sources":["components/WeatherDetails.jsx","utils/fetchWeather.js","store/slices/weatherSlice.js","components/WeatherSearch.jsx","store/slices/themeSlice.js","App.js","store/store.js","index.js"],"names":["WeatherDetails","placeData","useSelector","state","weather","console","log","className","current","location","name","region","is_day","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","wind_kph","humidity","width","src","condition","icon","alt","text","color","temp_c","feelslike_c","fetchWeatherData","place","fetch","then","res","json","data","fetchWeather","createAsyncThunk","thunkAPI","a","weatherSlice","createSlice","initialState","reducers","updatePlace","action","payload","extraReducers","fulfilled","actions","WeatherSearch","theme","darkTheme","dispatch","useDispatch","useState","setPlace","type","placeholder","onChange","e","target","value","onClick","themeSlice","toggleTheme","App","configureStore","reducer","themeReducer","weatherReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.96021bdb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst WeatherDetails = () => {\r\n  const { placeData } = useSelector((state) => state.weather);\r\n  console.log(placeData);\r\n  const icons = [\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"h-6 w-6\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n      stroke=\"currentColor\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M3 15a4 4 0 004 4h9a5 5 0 10-.1-9.999 5.002 5.002 0 10-9.78 2.096A4.001 4.001 0 003 15z\"\r\n      />\r\n    </svg>,\r\n  ];\r\n  return (\r\n    <div className=\"select-none mt-5 px-2 py-2 rounded lg:h-3/5 w-2/5 flex lg:flex-row shadow-md bg-white text-black dark:bg-gray-700 dark:text-gray-100 sm:flex-col sm:items-center sm:h-4/5\">\r\n      {placeData.current ? (\r\n        <>\r\n          <div className=\"w-1/2 flex flex-col pl-5 pt-6\">\r\n            <div className=\"w-full h-full flex flex-col items-center justify-evenly\">\r\n              <div className=\"w-full flex flex-col items-center\">\r\n                <h2 className=\"py-3 text-5xl text-center\">\r\n                  {placeData.location.name}\r\n                </h2>\r\n                <h2 className=\" text-2xl text-center\">\r\n                  {placeData.location.region}\r\n                </h2>\r\n              </div>\r\n              <div className=\"h-full mt-5 flex flex-col items-center justify-center\">\r\n                {placeData.current.is_day ? (\r\n                  <div className=\"w-full flex flex-col items-center\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"py-2  h-12 w-12\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\r\n                      />\r\n                    </svg>\r\n                    <p>Day</p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"w-full flex flex-col items-center\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"py-2 h-12 w-12\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\r\n                      />\r\n                    </svg>\r\n                    <p>Night</p>\r\n                  </div>\r\n                )}\r\n                <p>Wind Speed : {placeData.current.wind_kph} KM/h</p>\r\n                <p>Humidity : {placeData.current.humidity} %</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-1/2 flex flex-col items-center justify-evenly\">\r\n            <div className=\"flex flex-col items-center justify-start w-full h-full\">\r\n              <img\r\n                width=\"160\"\r\n                src={placeData.current.condition.icon}\r\n                alt={placeData.current.condition.text}\r\n                color=\"currentColor\"\r\n              />\r\n              <p className=\"text-3xl\">{placeData.current.condition.text}</p>\r\n            </div>\r\n            <div className=\"w-full h-full flex flex-col items-center justify-center\">\r\n              <h2 className=\"mt-3 py-3 text-5xl\">\r\n                {placeData.current.temp_c}°C\r\n              </h2>\r\n              <p>Feels like {placeData.current.feelslike_c}°C</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p className=\"text-4xl shadow-2xl flex items-center justify-center h-full w-full\">\r\n          No Location Selected\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDetails;\r\n","const API_URL =\r\n  \"http://api.weatherapi.com/v1/current.json?key=8e6a7cfb5049423db6d92748210108&q=\";\r\n\r\nexport const fetchWeatherData = (place) => {\r\n  return fetch(API_URL + place)\r\n    .then((res) => res.json())\r\n    .then((data) => data);\r\n};\r\n","//\r\n\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchWeatherData } from \"../../utils/fetchWeather\";\r\n\r\nexport const fetchWeather = createAsyncThunk(\r\n  \"weather\",\r\n  async (place, thunkAPI) => {\r\n    const data = await fetchWeatherData(place);\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const weatherSlice = createSlice({\r\n  name: \"weather\",\r\n  initialState: {\r\n    place: \"\",\r\n    placeData: {},\r\n  },\r\n  reducers: {\r\n    updatePlace: (state, action) => {\r\n      state.place = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchWeather.fulfilled]: (state, action) => {\r\n      state.placeData = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { updatePlace } = weatherSlice.actions;\r\nexport default weatherSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchWeather, updatePlace } from \"../store/slices/weatherSlice\";\r\n\r\nconst WeatherSearch = () => {\r\n  const { darkTheme } = useSelector((state) => state.theme);\r\n  const dispatch = useDispatch();\r\n  const [place, setPlace] = useState(\"\");\r\n  const handleChange = (e) => setPlace(e.target.value);\r\n  const handleClick = () => {\r\n    dispatch(updatePlace(place));\r\n    dispatch(fetchWeather(place));\r\n  };\r\n  return (\r\n    <div\r\n      className={`w-1/5 mt-5 flex flex-row items-center justify-evenly text-black`}\r\n    >\r\n      <input\r\n        className={\r\n          \"m-1 px-3 py-2 rounded-md bg-white text-black dark:bg-gray-700 dark:text-gray-100\"\r\n        }\r\n        type=\"text\"\r\n        placeholder=\"Enter City Name...\"\r\n        onChange={handleChange}\r\n      />\r\n      <button\r\n        className={`m-1 text-gray-100 py-2 px-4 rounded bg-blue-500 hover:bg-blue-700`}\r\n        onClick={handleClick}\r\n      >\r\n        Search\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherSearch;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const themeSlice = createSlice({\r\n  name: \"theme\",\r\n  initialState: {\r\n    darkTheme: true,\r\n  },\r\n  reducers: {\r\n    toggleTheme: (state) => {\r\n      state.darkTheme = !state.darkTheme;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleTheme } = themeSlice.actions;\r\n\r\nexport default themeSlice.reducer;\r\n","import { useDispatch, useSelector } from \"react-redux\";\nimport WeatherDetails from \"./components/WeatherDetails\";\nimport WeatherSearch from \"./components/WeatherSearch\";\nimport { toggleTheme } from \"./store/slices/themeSlice\";\n\nconst App = () => {\n  const { darkTheme } = useSelector((state) => state.theme);\n  const dispatch = useDispatch();\n  return (\n    <div\n      className={`h-screen flex flex-col items-center w-full ${\n        darkTheme ? \"bg-gray-800 dark\" : \"bg-gray-200\"\n      }`}\n    >\n      <header\n        className={`h-14 w-screen shadow-lg flex flex-row items-center justify-between bg-gray-100 text-black dark:bg-gray-700 text-gray-200`}\n      >\n        <h2 className=\"ml-8 text-2xl text-black dark:text-gray-200\">\n          Weather App\n        </h2>\n        <button\n          className=\"mr-8 bg-blue-500 text-white py-2 px-4\"\n          onClick={() => dispatch(toggleTheme())}\n        >\n          {darkTheme ? \"Light Theme\" : \"Dark Theme\"}\n        </button>\n      </header>\n      <div\n        className={`mt-3 rounded-md flex flex-col items-center h-full w-full dark:bg-gray-800 `}\n      >\n        <WeatherSearch />\n        <WeatherDetails />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport themeReducer from \"./slices/themeSlice\";\r\nimport weatherReducer from \"./slices/weatherSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    theme: themeReducer,\r\n    weather: weatherReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}