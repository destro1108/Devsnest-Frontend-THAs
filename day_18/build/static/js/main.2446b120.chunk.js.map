{"version":3,"sources":["components/ChessCell.js","components/ChessBoard.js","App.js","reportWebVitals.js","index.js"],"names":["ChessCell","color","className","ChessBoard","rows","i","j","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0JAUeA,EARG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAChB,OACI,qBAAKC,UAAW,QAAUD,KCmBnBE,EApBI,WAEf,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAI,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAClBF,EAAKG,KAAKD,EAAE,IAAM,EAAKD,EAAE,IAAM,EAC/B,cAAC,EAAD,CAAWJ,MAAM,UACjB,cAAC,EAAD,CAAWA,MAAQ,UACjBI,EAAE,IAAM,EAAI,cAAC,EAAD,CAAWJ,MAAM,UAC/B,cAAC,EAAD,CAAWA,MAAM,WAGzB,OACI,qBAAKC,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAf,SACKE,OCDFI,EAbH,WACV,OACE,sBAAKN,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,+CAEF,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,UCEOO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2446b120.chunk.js","sourcesContent":["import React from 'react'\n\nconst ChessCell = ({color}) => {\n    return (\n        <div className={\"cell \" + color}>\n            \n        </div>\n    )\n}\n\nexport default ChessCell;\n","import React from 'react'\nimport ChessCell from './ChessCell';\n\nconst ChessBoard = () => {\n    let rows = [];\n    for (let i = 0; i < 8; i++){\n        for(let j = 0; j < 8; j++){\n            rows.push(j%2 === 1 ? (i%2 === 0 ? \n            <ChessCell color='black' /> : \n            <ChessCell color = 'white' />) : \n            ((i%2 === 0 ? <ChessCell color='white' /> : \n            <ChessCell color='black'/>)));\n        }\n    }\n    return(\n        <div className=\"chess-board-wrapper\">\n            <div className=\"chess-board\">\n                {rows}\n            </div>\n        </div>\n    )\n}\n\nexport default ChessBoard;\n","\nimport ChessBoard from \"./components/ChessBoard\"\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h2>ChessBoard!</h2>\n      </header>\n      <div className=\"content\">\n        <ChessBoard />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}